generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  organization_id      String                @id @default(uuid())
  name                 String
  customers            Customer[]
  Issue                Issue[]
  organization_peoples Organization_People[]
  Sprints              Sprint[]

  @@map("organizations")
}

model Organization_People {
  team_member_id String       @id @default(uuid())
  email          String       @unique
  name           String
  role           Role         @default(member)
  organizationId String
  Issue          Issue[]
  organization   Organization @relation(fields: [organizationId], references: [organization_id])

  @@map("organization_people")
}

model Customer {
  customer_id    String       @id @default(uuid())
  phone          Int?         @unique
  email          String       @unique
  organizationId String
  name           String
  organization   Organization @relation(fields: [organizationId], references: [organization_id])
  issues         Issue[]

  @@map("customers")
}

model Issue {
  issue_id       String              @id @default(uuid())
  title          String
  description    String?
  state          State?              @default(todo)
  priority       Priority?           @default(low)
  created_at     DateTime            @default(now())
  updated_at     DateTime            @updatedAt
  deleted_at     DateTime?
  customerId     String
  team_memberId  String
  organizationId String
  sprintId       String?
  customer       Customer            @relation(fields: [customerId], references: [customer_id])
  organization   Organization        @relation(fields: [organizationId], references: [organization_id])
  sprint         Sprint?             @relation(fields: [sprintId], references: [sprint_id])
  team_member    Organization_People @relation(fields: [team_memberId], references: [team_member_id])

  @@map("issues")
}

model Sprint {
  sprint_id      String       @id @default(uuid())
  name           String
  description    String?
  start_date     DateTime
  end_date       DateTime
  status         SprintStatus
  organizationId String
  issue          Issue[]
  organization   Organization @relation(fields: [organizationId], references: [organization_id])

  @@map("sprints")
}

enum Role {
  admin
  member
}

enum State {
  todo
  backlog
  progress
  completed
}

enum Priority {
  high
  low
  medium
}

enum SprintStatus {
  ongoing
  upcoming
  completed
}
